"use strict";(self.webpackChunkcourseview_docs=self.webpackChunkcourseview_docs||[]).push([[896],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=s(n),f=o,y=m["".concat(p,".").concat(f)]||m[f]||u[f]||i;return n?r.createElement(y,a(a({ref:t},l),{},{components:n})):r.createElement(y,a({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3042:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],c={sidebar_position:4},p="Empty view component",s={unversionedId:"home-empty-view",id:"home-empty-view",title:"Empty view component",description:"Create a new folder components and create a new file components/HomeEmptyView.js",source:"@site/docs/home-empty-view.md",sourceDirName:".",slug:"/home-empty-view",permalink:"/courseview-docs/home-empty-view",editUrl:"https://github.com/eighth-mile/courseview-docs/tree/main/docs/docs/home-empty-view.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Create a new project",permalink:"/courseview-docs/create-expo-project"}},l={},u=[],m={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"empty-view-component"},"Empty view component"),(0,i.kt)("p",null,"Create a new folder ",(0,i.kt)("inlineCode",{parentName:"p"},"components")," and create a new file ",(0,i.kt)("inlineCode",{parentName:"p"},"components/HomeEmptyView.js")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { AntDesign } from '@expo/vector-icons';\nimport { TouchableOpacity, StyleSheet, Text, View } from 'react-native';\n\n\nexport default function HomeEmptyView({ onPress }) {\n  return (\n    <View style={styles.container}>\n      <AntDesign name=\"addfile\" size={96} color=\"#CBCBCB\" />\n      <Text style={styles.text}>\n        Consider adding programs from our repository\n      </Text>\n      <TouchableOpacity style={styles.button} onPress={onPress}>\n        <Text style={styles.buttonText}>ADD COURSE</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    fontSize: 18,\n    color: '#727272',\n    padding: 20,\n    textAlign: 'center'\n  },\n  button: {\n    backgroundColor: '#3C6BA3',\n    paddingHorizontal: 32,\n    paddingVertical: 10,\n    borderRadius: 8\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18\n  }\n});\n")),(0,i.kt)("p",null,"You can add the following line in ",(0,i.kt)("inlineCode",{parentName:"p"},"App.js")," to test the component:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, Button, View } from 'react-native';\nimport HomeEmptyView from './components/HomeEmptyView';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <HomeEmptyView />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n")))}f.isMDXComponent=!0}}]);